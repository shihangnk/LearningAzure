using System;
using System.Diagnostics;
using AutoFixture;
using AutoFixture.Xunit2;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using TestAutoFixture.model;
using Assert = NUnit.Framework.Assert;

namespace TestAutoFixture
{
    [TestClass]
    public class MsTest1
    {
        [TestInitialize]
        public void before()
        {
            Console.Out.WriteLine("this is in before");
        }

        [TestCleanup]
        public void after()
        {
            Console.Out.WriteLine("this is after");
        }

        [TestMethod]
        public void TestMethod()
        {
            var fixture = new Fixture();
            var autoGeneratedText = fixture.Create<string>();

            var model1 = fixture.Create<Model1>();
            Console.Out.WriteLine(model1.toString());
            Console.Out.WriteLine("Here is Console.Out.WriteLine .......... ["+autoGeneratedText+"]");
            Debug.WriteLine("Here is Debug.WriteLine() ................. step 1");
//            Assert.Equals(autoGeneratedText, "aaa");
            Assert.Equals("aaa", "bbb");
 //           Assert.AreEqual("aaa", "bbb");
        }

        [TestMethod]
        public void TestMethod2(Model1 model1)
        {
            Console.Out.WriteLine(model1.toString());
        }

        [TestMethod]
        public void TestInterface()
        {
            var fixture = new Fixture();
            //fixture.Register<IMyInterface>(() => new MyClass1());

            //var sut = fixture.Create<IMyInterface>();
            //Console.Out.WriteLine(sut.GetIntValue());

/*
            var myClass = fixture.Create<MyClass>();
            myClass.Map();
*/
        }
    }
}
